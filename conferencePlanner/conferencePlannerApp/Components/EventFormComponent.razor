@page "/booking-form"
@using Radzen
@using Radzen.Blazor


		<RadzenTemplateForm TItem="SchedulerEvent" Data=@_eventModel Submit=@OnSubmit>
			<RadzenFieldset Text="Booking Details">
				<div class="row mb-3">
					<div class="col-md-4">
						<RadzenLabel Text="Title" />
					</div>
					<div class="col-md-8">
						<RadzenTextBox Name="Title" @bind-Value=@_eventModel.Title Class="w-100"
									   Required="true" RequiredError="Title is required" />
						<RadzenRequiredValidator Component="Title" Text="Title is required" />
					</div>
				</div>

				<div class="row mb-3">
					<div class="col-md-4">
						<RadzenLabel Text="Start Time" />
					</div>
					<div class="col-md-8">
						<RadzenDatePicker Name="Start" @bind-Value=@_eventModel.Start
										  ShowTime="true" DateFormat="MM/dd/yyyy HH:mm" Class="w-100"
										  Required="true" RequiredError="Start time is required" />
						<RadzenRequiredValidator Component="Start" Text="Start time is required" />
					</div>
				</div>

				<div class="row mb-3">
					<div class="col-md-4">
						<RadzenLabel Text="End Time" />
					</div>
					<div class="col-md-8">
						<RadzenDatePicker Name="End" @bind-Value=@_eventModel.End
										  ShowTime="true" DateFormat="MM/dd/yyyy HH:mm" Class="w-100"
										  Required="true" RequiredError="End time is required" />
						<RadzenRequiredValidator Component="End" Text="End time is required" />
					</div>
				</div>

				<div class="row mb-3">
					<div class="col-md-4">
						<RadzenLabel Text="Room" />
					</div>
					@if (Rooms is not null && Rooms.Count > 0)
					{
						<div class="col-md-8">
							<RadzenDropDown Name="RoomId"
											Data=@Rooms
											@bind-Value=@_eventModel.RoomId
											Class="w-100"
											TextProperty="Name"
											ValueProperty="Id"
											Required="true"
											RequiredError="Room is required" />
							<RadzenRequiredValidator Component="RoomId" Text="Room is required" />
						</div>
					}
				</div>

				<div class="row mb-3">
					<div class="col-md-4">
						<RadzenLabel Text="Color" />
					</div>
					<div class="col-md-8">
						<RadzenColorPicker Name="Color" @bind-Value=@_eventModel.Color Class="w-100" />
					</div>
				</div>

				<div class="row">
					<div class="col-md-12 text-right">
						<RadzenButton ButtonType="ButtonType.Submit" Text="Save"
									  ButtonStyle="ButtonStyle.Primary" Class="mr-2" />
						<RadzenButton ButtonType="ButtonType.Button" Text="Cancel"
									  ButtonStyle="ButtonStyle.Light" Click=@OnCancel />
					</div>
				</div>
			</RadzenFieldset>
		</RadzenTemplateForm>

@code {
	[Parameter]
	public List<Room>? Rooms { get; set; }
	[Parameter]
	public EventCallback<SchedulerEvent> OnSave { get; set; }

	private SchedulerEvent? _eventModel;

	private SchedulerEvent Event { get; set; } = new SchedulerEvent();

	private void SaveEvent()
	{
		OnSave.InvokeAsync(Event);
	}

	protected override void OnInitialized()
	{
		_eventModel = new();
	}

	private void OnSubmit()
	{
		// Handle form submission here
		// You can add your save logic
	}

	private void OnCancel()
	{
		// Handle cancellation here
		// You can add navigation or reset logic
	}

}
