@page "/booking-form"
@using Radzen
@using Radzen.Blazor

<RadzenTemplateForm TItem="SchedulerEvent" Data=@_eventModel Submit=@OnSubmit>
    <RadzenFieldset Text="Booking Details">
        <div class="row mb-3">
            <div class="col-md-4">
                <RadzenLabel Text="Title" />
            </div>
            <div class="col-md-8">
                <RadzenTextBox Name="Title" @bind-Value=@_eventModel.Title Class="w-100"
                               Required="true" RequiredError="Title is required" />
                <RadzenRequiredValidator Component="Title" Text="Title is required" />
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-md-4">
                <RadzenLabel Text="Start Time" />
            </div>
            <div class="col-md-8">
                <RadzenDatePicker Name="Start" @bind-Value=@_eventModel.Start
                                  ShowTime="true" DateFormat="MM/dd/yyyy HH:mm" Class="w-100"
                                  Required="true" RequiredError="Start time is required" />
                <RadzenRequiredValidator Component="Start" Text="Start time is required" />
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-md-4">
                <RadzenLabel Text="End Time" />
            </div>
            <div class="col-md-8">
                <RadzenDatePicker Name="End" @bind-Value=@_eventModel.End
                                  ShowTime="true" DateFormat="MM/dd/yyyy HH:mm" Class="w-100"
                                  Required="true" RequiredError="End time is required" />
                <RadzenRequiredValidator Component="End" Text="End time is required" />
            </div>
        </div>
        <div class="row mb-3">
            <div class="col-md-4">
                <RadzenLabel Text="Room" />
            </div>
            @if (Rooms is not null && Rooms.Count > 0)
            {
                <div class="col-md-8">
                    <RadzenDropDown Name="RoomId"
                                    Data=@Rooms
                                    @bind-Value=@_eventModel.RoomId
                                    Class="w-100"
                                    TextProperty="Name"
                                    ValueProperty="Id"
                                    Required="true"
                                    RequiredError="Room is required" />
                    <RadzenRequiredValidator Component="RoomId" Text="Room is required" />
                </div>
            }
        </div>
        <div class="row mb-3">
            <div class="col-md-4">
                <RadzenLabel Text="Color" />
            </div>
            <div class="col-md-8">
                <RadzenColorPicker Name="Color" @bind-Value=@_eventModel.Color Class="w-100" />
            </div>
        </div>
        <div class="row">
            <div class="col-md-12 text-right">
                <RadzenButton ButtonType="ButtonType.Submit" Text="Save"
                              ButtonStyle="ButtonStyle.Primary" Class="mr-2" />
            </div>
        </div>
    </RadzenFieldset>
</RadzenTemplateForm>

@code {
    [Parameter]
    public List<Room>? Rooms { get; set; }

    [Parameter]
    public EventCallback<SchedulerEvent> OnSave { get; set; }

    private SchedulerEvent _eventModel = new();

    protected override void OnInitialized()
    {
        _eventModel = new();
    }

    private async Task OnSubmit()
    {

            Console.WriteLine($"Submitting event:");
            Console.WriteLine($"Title: {_eventModel.Title}");
            Console.WriteLine($"Start: {_eventModel.Start}");
            Console.WriteLine($"End: {_eventModel.End}");
            Console.WriteLine($"Room: {_eventModel.RoomId}");

            await OnSave.InvokeAsync(_eventModel);
            _eventModel = new SchedulerEvent();
    }
}