@inject IAuthService authService
@inject NavigationManager navManager

<EditForm Model="@login" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label>Email</label>
        <InputText @bind-Value="login.Email" class="form-control" />
    </div>

    <div class="form-group mt-3">
        <label>Adgangskode</label>
        <InputText type="password" @bind-Value="login.Password" class="form-control" />
    </div>

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger mt-3">@errorMessage</div>
    }

    <button type="submit" class="btn btn-primary mt-3 w-100">Login</button>
</EditForm>

@code {
    private bool isLogin = true;
    private LoginModel login = new();
    private RegisterModel registerModel = new();
    private string errorMessage = string.Empty;
    private User? user = null;

    private async Task HandleLogin()
    {
        try
        {
            (user, errorMessage) = await authService.Login(login);
            if (user != null)
            {
                navManager.NavigateTo("/");
            }
        }
        catch
        {
            errorMessage = "Server not found";
        }
    }
}
