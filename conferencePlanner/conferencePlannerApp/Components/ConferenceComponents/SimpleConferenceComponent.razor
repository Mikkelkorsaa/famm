@inject IConferenceService conferenceService
@attribute [Authorize(Roles = "Admin, Organizer")]

<h3>SimpleConferenceComponent</h3>

<div class="row">
    @if (Conferences != null)
    {
        foreach (var conference in Conferences)
        {
            <div class="col-sm-6 col-md-4 col-lg-3 mb-3">
                <div class="card conference-card" @onclick="() => SelectConference(conference)">
                    <div class="card-body d-flex align-items-center justify-content-center">
                        @conference.Name
                    </div>
                </div>
            </div>
        }
    }
</div>

@code {
    [Parameter]
    public IEnumerable<Conference>? Conferences { get; set; }


    protected override async Task OnInitializedAsync()
    {
        Conferences = await conferenceService.GetActiveConferencesAsync();
    }

    private void SelectConference(Conference conference)
    {
        // Store the selected conference for use on other sites
        // This could be done using a service, local storage, or any other method
        Console.WriteLine($"Selected Conference: {conference.Id}");
    }
}

<style>
    .conference-card {
        cursor: pointer;
        transition: transform 0.2s;
    }

        .conference-card:hover {
            transform: scale(1.05);
        }

        .conference-card .card-body {
            height: 150px;
            text-align: center;
            background-color: #f8f9fa;
        }
</style>
