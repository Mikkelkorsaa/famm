@inject Blazored.LocalStorage.ILocalStorageService localStorage 
<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th scope="col">Navn</th>
            <th scope="col">Status</th>
        </tr>
    </thead>
    <tbody>
        @foreach (Conference conference in conferences!)
        {
            <tr @onclick="() => selectConference(conference)">
                <td>@conference.Name</td>
                @if (conference.AbstractDeadLine > DateTime.Now)
                {
                    <td><span class="badge bg-primary">Indsendelse af abstract</span></td>
                }
                else if (conference.ReviewDeadline > DateTime.Now)
                {
                    <td><span class="badge bg-info">Review periode</span></td>
                }
                else if (conference.StartDate > DateTime.Now)
                {
                    <td><span class="badge bg-warning">Planlægning</span></td>
                }
                else if (conference.EndDate > DateTime.Now)
                {
                    <td><span class="badge bg-success">I gang</span></td>
                }
                else
                {
                    <td><span class="badge bg-secondary">Afsluttet</span></td>
                }
            </tr>
        }
    </tbody>
</table>

<!-- if a conference has been clicked it will display in our custom modal component using the ShowConferenceComponent-->
@if (showConference)
{
    <ModalComponent OnClose="() => showConference = false">
        <ShowConferenceComponent Conference="@selectedConference" />
    </ModalComponent>    
}

@code {
    //List of conferences to display
    [Parameter]
    public List<Conference>? conferences { get; set; }
    //Boolean for showing the conference
    public bool showConference = false;
    //The selected conference
    public Conference? selectedConference;
    //Eventcallback for selecting a conference and sending it to the parent component
    [Parameter]
    public EventCallback<Conference> OnConferenceSelected { get; set; }

    protected override async Task OnInitializedAsync()
    {
        //Get the conference list from local storage
        conferences = await localStorage.GetItemAsync<List<Conference>>("ConferenceList") ?? new();	
	}

    //Method for displaying the conference in the modal
    public void displayConference(Conference conference)
    {
        selectedConference = conference;
        showConference = true;
    }

    //Method for selecting a conference and sending it to the parent component
    private async void selectConference(Conference conference)
    {
        await localStorage.SetItemAsync<Conference>("TemplateConference", conference);
        await OnConferenceSelected.InvokeAsync(conference);
    }
}
